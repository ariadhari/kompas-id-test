/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/pages/infographics.js":
/*!********************************************!*\
  !*** ./resources/js/pages/infographics.js ***!
  \********************************************/
/***/ (() => {

eval("\n\nvar datatable;\n\nvar KTDatatableJson = function () {\n  var grid = function grid() {\n    datatable = $('#kt_datatable').DataTable({\n      responsive: true,\n      paging: true,\n      dom: \"<'row'<'col-sm-12'tr>>\\n\\t\\t\\t<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7 dataTables_pager'lp>>\",\n      lengthMenu: [10, 25, 50, 100],\n      pageLength: 10,\n      processing: true,\n      serverSide: true,\n      ajax: {\n        url: HOST_URL + '/datatables/infographics',\n        type: 'POST'\n      },\n      order: [[7, 'desc']],\n      columns: [{\n        data: 'inf_file_thumb'\n      }, {\n        data: 'inf_file'\n      }, {\n        data: 'inf_title'\n      }, {\n        data: 'inf_caption'\n      }, {\n        data: 'inf_type'\n      }, {\n        data: 'inf_size'\n      }, {\n        data: 'inf_resolution'\n      }, {\n        data: 'inf_date'\n      }, {\n        data: 'inf_keyword'\n      }, {\n        data: 'action'\n      }],\n      columnDefs: [{\n        targets: 0,\n        width: '75',\n        responsivePriority: 1,\n        render: function render(data, type, row, meta) {\n          var image_default = HOST_URL + '/media/default/image_default.jpg';\n          var months = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'];\n          var date = new Date(row.inf_date);\n          var image = IMG_URL + 'library-infografik/1/' + date.getFullYear() + '/' + months[date.getMonth()] + '/thumbs/' + data;\n          return '<img src=\"' + image + '\" onerror=\"this.onerror=null;this.src=\\'' + image_default + '\\'\" style=\"width:90px;\"/>';\n        }\n      }, {\n        targets: 0,\n        responsivePriority: 2\n      }, {\n        targets: 6,\n        width: '150'\n      }, {\n        targets: 7,\n        width: '75',\n        responsivePriority: 3\n      }]\n    });\n\n    var filter = function filter() {\n      var val = $.fn.dataTable.util.escapeRegex($(this).val());\n      datatable.column($(this).data('col-index')).search(val ? val : '', false, false).draw();\n    };\n\n    $('#kt_search').on('click', function (e) {\n      e.preventDefault();\n      var params = {};\n      $('.datatable-input').each(function () {\n        var i = $(this).data('col-index');\n\n        if (params[i]) {\n          params[i] += '|' + $(this).val();\n        } else {\n          params[i] = $(this).val();\n        }\n      });\n      $.each(params, function (i, val) {\n        // apply search params to datatable\n        datatable.column(i).search(val ? val : '', false, false);\n      });\n      datatable.table().draw();\n    });\n    $('#kt_reset').on('click', function (e) {\n      e.preventDefault();\n      $('.datatable-input').each(function () {\n        $(this).val('');\n        datatable.column($(this).data('col-index')).search('', false, false);\n      });\n      datatable.table().draw();\n    });\n  };\n\n  return {\n    init: function init() {\n      grid();\n    }\n  };\n}();\n\njQuery(document).ready(function () {\n  KTDatatableJson.init();\n});\n\nwindow.destroy = function (id) {\n  var msg = 'Do you want to to delete this data now ? <br/> You won\\'t be able to revert this!';\n  Swal.fire({\n    title: 'Are you sure?',\n    html: msg,\n    icon: 'warning',\n    width: '550px',\n    buttonsStyling: false,\n    confirmButtonText: \"<i class='flaticon2-check-mark'></i>Yes, delete it!\",\n    showCancelButton: true,\n    cancelButtonText: \"<i class='flaticon2-cross'></i> No, thanks\",\n    customClass: {\n      confirmButton: \"btn btn-primary\",\n      cancelButton: \"btn btn-secondary\"\n    },\n    reverseButtons: true\n  }).then(function (result) {\n    if (result.value) {\n      $.ajax({\n        type: \"POST\",\n        dataType: 'html',\n        url: HOST_URL + \"/infographics/\" + id,\n        cache: false,\n        data: {\n          _method: 'DELETE',\n          id: id\n        },\n        success: function success(data) {\n          Swal.fire(\"Success!\", \"Data deleted successfully.\", \"success\");\n          datatable.table().draw();\n        },\n        error: function error(xhr, ajaxOptions, thrownError) {\n          Swal.fire(\"Failed!\", \"Data failed to delete.\", \"error\");\n        }\n      }); //event.preventDefault();\n    }\n  });\n  return false;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/pages/infographics.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/pages/infographics.js"]();
/******/ 	
/******/ })()
;