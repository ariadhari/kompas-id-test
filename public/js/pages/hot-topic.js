/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/pages/hot-topic.js":
/*!*****************************************!*\
  !*** ./resources/js/pages/hot-topic.js ***!
  \*****************************************/
/***/ (() => {

eval("\n\nvar datatable;\n\nvar KTDatatableJson = function () {\n  var grid = function grid() {\n    datatable = $('#kt_datatable').DataTable({\n      responsive: true,\n      paging: true,\n      dom: \"<'row'<'col-sm-12'tr>>\\n\\t\\t\\t<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7 dataTables_pager'lp>>\",\n      lengthMenu: [10, 25, 50, 100],\n      pageLength: 10,\n      processing: true,\n      serverSide: true,\n      autoWidth: false,\n      ajax: {\n        url: HOST_URL + '/datatables/hot_topic',\n        type: 'POST'\n      },\n      order: [[1, 'desc']],\n      columns: [{\n        data: 'tags.tag'\n      }, {\n        data: 'h_create_date'\n      }, {\n        data: 'tags.count'\n      }, {\n        data: 'h_status'\n      }, {\n        data: 'h_status_xml'\n      }, {\n        data: 'action'\n      }],\n      columnDefs: [{\n        targets: 0,\n        width: '250',\n        responsivePriority: 1,\n        render: function render(data, type, row, meta) {\n          if (row.tags) return data;\n          return null;\n        }\n      }, {\n        targets: 1,\n        width: '250'\n      }, {\n        width: '250',\n        targets: 2,\n        className: 'text-right',\n        render: function render(data, type, row, meta) {\n          if (row.tags) return data;\n          return null;\n        }\n      }, {\n        width: '75',\n        targets: 3,\n        render: function render(data, type, row, meta) {\n          var status = {\n            'active': {\n              'title': 'Active',\n              'class': 'label-light-success'\n            },\n            'inactive': {\n              'title': 'Inactive',\n              'class': 'label-light-danger'\n            }\n          };\n\n          if (typeof status[data] === 'undefined') {\n            return data;\n          }\n\n          return '<span class=\"label label-lg font-weight-bold ' + status[data][\"class\"] + ' label-inline\">' + status[data].title + '</span>';\n        }\n      }, {\n        width: '75',\n        targets: 4,\n        render: function render(data, type, row, meta) {\n          var status = {\n            1: {\n              'title': 'Yes',\n              'class': 'label-light-success'\n            },\n            0: {\n              'title': 'No',\n              'class': 'label-light-danger'\n            }\n          };\n\n          if (typeof status[data] === 'undefined') {\n            return data;\n          }\n\n          return '<span class=\"label label-lg font-weight-bold ' + status[data][\"class\"] + ' label-inline\">' + status[data].title + '</span>';\n        }\n      }, {\n        targets: 5,\n        width: '200',\n        title: 'Actions',\n        orderable: false,\n        className: \"text-nowrap\"\n      }]\n    });\n\n    var filter = function filter() {\n      var val = $.fn.dataTable.util.escapeRegex($(this).val());\n      table.column($(this).data('col-index')).search(val ? val : '', false, false).draw();\n    };\n\n    $('#kt_search').on('click', function (e) {\n      e.preventDefault();\n      var params = {};\n      $('.datatable-input').each(function () {\n        var i = $(this).data('col-index');\n\n        if (params[i]) {\n          params[i] += '|' + $(this).val();\n        } else {\n          params[i] = $(this).val();\n        }\n      });\n      $.each(params, function (i, val) {\n        // apply search params to datatable\n        datatable.column(i).search(val ? val : '', false, false);\n      });\n      datatable.table().draw();\n    });\n  };\n\n  return {\n    init: function init() {\n      grid();\n    }\n  };\n}();\n\njQuery(document).ready(function () {\n  KTDatatableJson.init();\n});\n\nwindow.destroy = function (id) {\n  var msg = 'Do you want to to delete this data now ? <br/> You won\\'t be able to revert this!';\n  Swal.fire({\n    title: 'Are you sure?',\n    html: msg,\n    icon: 'warning',\n    width: '550px',\n    buttonsStyling: false,\n    confirmButtonText: \"<i class='flaticon2-check-mark'></i>Yes, delete it!\",\n    showCancelButton: true,\n    cancelButtonText: \"<i class='flaticon2-cross'></i> No, thanks\",\n    customClass: {\n      confirmButton: \"btn btn-primary\",\n      cancelButton: \"btn btn-secondary\"\n    },\n    reverseButtons: true\n  }).then(function (result) {\n    if (result.value) {\n      $.ajax({\n        type: \"POST\",\n        dataType: 'html',\n        url: HOST_URL + \"/hot_topic/\" + id,\n        cache: false,\n        data: {\n          _method: 'DELETE',\n          id: id\n        },\n        success: function success(data) {\n          Swal.fire(\"Success!\", \"Data deleted successfully.\", \"success\");\n          datatable.table().draw();\n        },\n        error: function error(xhr, ajaxOptions, thrownError) {\n          Swal.fire(\"Failed!\", \"Data failed to delete.\", \"error\");\n        }\n      });\n      event.preventDefault();\n    }\n  });\n  return false;\n};\n\nwindow.setStatus = function (id, status) {\n  var msg = 'Do you want to set this data as hot topic ?';\n  var title = status === 'inactive' ? 'Deactivate hot topic' : 'Activate hot topic';\n  Swal.fire({\n    title: title,\n    html: msg,\n    icon: 'warning',\n    width: '550px',\n    buttonsStyling: false,\n    confirmButtonText: \"<i class='flaticon2-check-mark'></i>Yes, i'm sure!\",\n    showCancelButton: true,\n    cancelButtonText: \"<i class='flaticon2-cross'></i> No, thanks\",\n    customClass: {\n      confirmButton: \"btn btn-primary\",\n      cancelButton: \"btn btn-secondary\"\n    },\n    reverseButtons: true\n  }).then(function (result) {\n    if (result.value) {\n      $.ajax({\n        type: \"POST\",\n        dataType: 'json',\n        url: HOST_URL + \"/ajax/hot_topic/set-status\",\n        cache: false,\n        data: {\n          id: id,\n          status: status\n        },\n        success: function success(data) {\n          console.log(data.msg);\n          Swal.fire('Success!', title + 'successfully', 'success');\n          datatable.table().draw();\n        },\n        error: function error(xhr, ajaxOptions, thrownError) {\n          Swal.fire(\"Failed!\", \"Failed to set as hot topic.\", \"error\");\n        }\n      });\n      event.preventDefault();\n    }\n  });\n  return false;\n};\n\nwindow.generateXML = function (id) {\n  var msg = 'Do you want to publish hot topic now ?';\n  Swal.fire({\n    title: 'Publish Hot Topic',\n    html: msg,\n    icon: 'warning',\n    width: '550px',\n    buttonsStyling: false,\n    confirmButtonText: \"<i class='flaticon2-check-mark'></i>Yes, i'm sure!\",\n    showCancelButton: true,\n    cancelButtonText: \"<i class='flaticon2-cross'></i> No, thanks\",\n    customClass: {\n      confirmButton: \"btn btn-primary\",\n      cancelButton: \"btn btn-secondary\"\n    },\n    reverseButtons: true\n  }).then(function (result) {\n    if (result.value) {\n      $.ajax({\n        type: \"POST\",\n        dataType: 'json',\n        url: HOST_URL + \"/ajax/hot_topic/publish\",\n        cache: false,\n        data: {\n          id: id\n        },\n        success: function success(data) {\n          Swal.fire('Success!', 'Publish Hot Topic successfully', 'success');\n          datatable.table().draw();\n        },\n        error: function error(xhr, ajaxOptions, thrownError) {\n          Swal.fire(\"Failed!\", \"Failed to set as hot topic.\", \"error\");\n        }\n      });\n      event.preventDefault();\n    }\n  });\n  return false;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/pages/hot-topic.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/pages/hot-topic.js"]();
/******/ 	
/******/ })()
;