/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/pages/lock_form.js":
/*!*****************************************!*\
  !*** ./resources/js/pages/lock_form.js ***!
  \*****************************************/
/***/ (() => {

eval("window.multipleRules = [];\nvar validator;\nvar imgurl = $('#img_url').val();\nvar imgurl_lock = $('#img_url_lock').val();\nvar defimage = $('#img_default').val();\n\nwindow.onload = function () {\n  if ($('#state').val() == 'add') {\n    $('input[name=\"source\"]:checked').trigger('change');\n  }\n};\n\n$(function () {\n  $(\".fancybox\").fancybox({\n    width: '1062px',\n    height: 'auto',\n    autoDimensions: false,\n    type: 'iframe',\n    autoSize: false,\n    iframe: {\n      css: {\n        width: '1072px',\n        height: '100%'\n      }\n    },\n    clickSlide: false,\n    clickOutside: false\n  });\n  $('#publish_date_datetimepicker').datetimepicker({\n    format: \"YYYY-MM-DD HH:mm:ss\",\n    use24hours: true,\n    autoclose: true,\n    todayHighlight: true,\n    buttons: {\n      showToday: true,\n      showClear: true\n    },\n    keyBinds: {\n      'delete': function _delete() {\n        if (this.date() === null) {\n          this.date(moment());\n        }\n\n        this.hide();\n      },\n      enter: function enter() {\n        if (this.date() === null) {\n          this.date(moment());\n        }\n\n        this.hide();\n      }\n    }\n  });\n  $('#start_date_datetimepicker').datetimepicker({\n    format: \"YYYY-MM-DD HH:mm:ss\",\n    use24hours: true,\n    autoclose: true,\n    todayHighlight: true,\n    buttons: {\n      showToday: true,\n      showClear: true\n    },\n    keyBinds: {\n      'delete': function _delete() {\n        if (this.date() === null) {\n          this.date(moment());\n        }\n\n        this.hide();\n      },\n      enter: function enter() {\n        if (this.date() === null) {\n          this.date(moment());\n        }\n\n        this.hide();\n      }\n    }\n  });\n  $('#end_date_datetimepicker').datetimepicker({\n    format: \"YYYY-MM-DD HH:mm:ss\",\n    use24hours: true,\n    autoclose: true,\n    todayHighlight: true,\n    buttons: {\n      showToday: true,\n      showClear: true\n    },\n    keyBinds: {\n      'delete': function _delete() {\n        if (this.date() === null) {\n          this.date(moment());\n        }\n\n        this.hide();\n      },\n      enter: function enter() {\n        if (this.date() === null) {\n          this.date(moment());\n        }\n\n        this.hide();\n      }\n    }\n  });\n  $('#start_date_datetimepicker').on('change.datetimepicker', function (e) {\n    $('#end_date_datetimepicker').datetimepicker('clear');\n    $('#end_date_datetimepicker').datetimepicker('minDate', e.date);\n    $('#end_date_datetimepicker').datetimepicker('clear');\n  });\n  $(\"#channel\").select2();\n  $('#category_id').select2({\n    placeholder: \"Choose Category\",\n    allowClear: true,\n    matcher: modelMatcher\n  });\n  $(\"#category_id\").on(\"change\", function (e) {\n    if ($(this).val()) {\n      $.ajax({\n        type: \"POST\",\n        url: HOST_URL + '/ajax/lock/generate-url-category',\n        cache: false,\n        data: {\n          id: $(this).val()\n        },\n        success: function success(data) {\n          $(\"#url_category\").val(data);\n        }\n      });\n    }\n  });\n  $('input[type=radio][name=source]').change(function () {\n    resetForm();\n  });\n\n  if ($('#channel_val').val()) {\n    var tagsval = JSON.parse($('#channel_val').val());\n    $('#channel').val(tagsval).trigger('change');\n  }\n\n  if ($('#object_val').val()) {\n    var objectval = JSON.parse($('#object_val').val());\n    setForm(objectval, 1);\n  }\n\n  $.validator.addMethod('filesize', function (value, element, param) {\n    param = param * 1024;\n    return this.optional(element) || element.files[0].size <= param;\n  }, 'Ukuran file harus kurang dari {0} Kb');\n  $.validator.addMethod('dimension', function (value, element, param) {\n    if (element.files.length == 0) {\n      return true;\n    }\n\n    var width = $(element).data('imageWidth');\n    var height = $(element).data('imageHeight');\n\n    if (width == param[0] && height == param[1]) {\n      return true;\n    } else {\n      return false;\n    }\n  }, 'Please upload an image with {0} x {1} pixels dimension');\n  $.each($.validator.methods, function (key, value) {\n    $.validator.methods[key] = function () {\n      if (arguments.length > 0) {\n        arguments[0] = $.trim(arguments[0]);\n      }\n\n      return value.apply(this, arguments);\n    };\n  });\n  var form = document.getElementById(\"form_lock\");\n  validator = $(\"#form_lock\").validate({\n    ignore: null,\n    onfocusout: function onfocusout(el) {\n      if (!this.checkable(el)) {\n        this.element(el);\n      }\n    },\n    rules: {\n      title: {\n        required: true,\n        maxlength: 250\n      },\n      summary: \"required\",\n      publish_date: \"required\",\n      image_upload: {\n        required: function required(element) {\n          return $(\"#image\").val() == \"\";\n        },\n        accept: \"image/jpg,image/jpeg,image/png\",\n        filesize: 2048 // 2 Mb\n\n      },\n      category_id: \"required\",\n      url: {\n        required: true,\n        url: true\n      },\n      start_date: \"required\",\n      end_date: \"required\",\n      ordering: {\n        required: true,\n        digits: true\n      },\n      position: \"required\",\n      'channel[]': \"required\",\n      'platform[]': \"required\"\n    },\n    highlight: function highlight(element) {\n      $(element).closest('.form-control').addClass('is-invalid');\n    },\n    unhighlight: function unhighlight(element) {\n      $(element).closest(\".form-control\").removeClass(\"is-invalid\");\n    },\n    errorPlacement: function errorPlacement(error, element) {\n      error.addClass('fv-plugins-message-container');\n\n      if (element.hasClass('select2') && element.next('.select2-container').length) {\n        $(element).closest('.form-group').addClass('is-invalid');\n        error.insertAfter(element.next('.select2-container'));\n      } else if (element.parent('.input-group').length) {\n        error.insertAfter(element.parent());\n      } else if (element.hasClass('select2')) {\n        error.insertAfter(element.next('span'));\n      } else if (element.attr(\"type\") == \"radio\") {\n        error.insertAfter(element.closest('div.radio-inline'));\n      } else if (element.attr(\"type\") == \"checkbox\") {\n        error.insertAfter(element.closest('div.checkbox-inline'));\n      } else if (element.attr(\"name\") == \"content\") {\n        error.insertAfter(\"div#cke_content\");\n      } else {\n        error.insertAfter(element);\n      }\n    },\n    errorElement: \"div\",\n    errorClass: 'fv-help-block',\n    messages: {\n      source: {\n        required: 'Source is required'\n      },\n      title: {\n        required: 'Title is required.'\n      },\n      summary: {\n        required: 'Summary is required.'\n      },\n      category_id: {\n        required: 'Category is required.'\n      },\n      publish_date: {\n        required: 'Publish Date is required.'\n      },\n      url: {\n        required: 'Url is required.'\n      },\n      image_upload: {\n        required: 'Image is required.'\n      },\n      start_date: {\n        required: 'Start Date is required.'\n      },\n      end_date: {\n        required: 'End Date is required.'\n      },\n      ordering: {\n        required: 'Ordering is required.'\n      },\n      position: {\n        required: 'Position is required.'\n      },\n      'channel[]': {\n        required: 'Channel is required.'\n      },\n      'platform[]': {\n        required: 'Choose platform for destkop, mobile, or both.'\n      }\n    },\n    wrapper: 'div'\n  });\n  $(\"#button_submit\").click(function (event) {\n    event.preventDefault();\n\n    if ($(\"#form_lock\").valid()) {\n      $.ajax({\n        type: \"POST\",\n        url: HOST_URL + '/ajax/lock/check-channel',\n        cache: false,\n        data: $('#form_lock :not(input[name=_method])').serialize(),\n        success: function success(data) {\n          if (data.length > 0) {\n            var arr = data[0].filter(function (elem, item, ary) {\n              return elem !== null && (!item || elem != ary[item - 1]);\n            });\n            $('<div class=\"fv-plugins-message-container\">' + '<div class=\"fv-help-block\">' + 'The channel you entered <strong>(' + arr.toString() + ')</strong> is already being exists on <strong> Ordering : ' + $('#ordering').val() + '</strong>' + '</div>' + '</div>').appendTo('#msgerror');\n            $('#channel').focus();\n          } else {\n            $('#form_lock').submit();\n          }\n        }\n      });\n    }\n\n    return false;\n  });\n});\n\nwindow.openArticle = function (url) {\n  $('.fancybox').attr('href', url + '?source=' + $('input[name=\"source\"]:checked').val()); //$('.fancybox').fancybox().trigger('click'); \n};\n\nwindow.addRules = function (rulesObj) {\n  rulesObj.forEach(function (value, i) {\n    for (var item in value) {\n      $('#' + item + i).rules('add', value[item]);\n    }\n  });\n};\n\nwindow.removeRules = function (rulesObj) {\n  rulesObj.forEach(function (value, i) {\n    for (var item in value) {\n      $('#' + item + i).rules('remove');\n    }\n  });\n};\n\nwindow.setForm = function (post) {\n  var edit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  $('#title').val(post.title);\n  $('#summary').val(post.summary);\n  $('#publish_date').val(post.publish_date);\n  $('#url').val(post.url);\n  $('#category_id').val(post.category_id).trigger('change');\n  $('#url_category').val(post.url_category);\n\n  if (edit) {\n    defimage = imgurl_lock + post.id + '/' + post.image;\n  } else {\n    var newDate = moment(post.publish_date).format(\"YYYY/MM/DD/\");\n\n    if ($('input[name=\"source\"]:checked').val() == 'BISNIS.COM') {\n      defimage = imgurl + 'posts/' + newDate + post.id + '/' + post.image;\n    } else {\n      defimage = imgurl + 'plus/' + post.id + '/' + post.image;\n    }\n  }\n\n  $(\"#view_image\").attr(\"src\", defimage);\n  if (post.image) $('#image').val(defimage);\n};\n\nwindow.resetForm = function () {\n  $('#title, #summary, #publish_date, #image, #url, #url_category').val('');\n  $('#category_id').val(null).trigger('change');\n  $(\"#view_image\").attr(\"src\", $('#img_default').val());\n};\n\nwindow.modelMatcher = function (params, data) {\n  data.parentText = data.parentText || \"\";\n\n  if ($.trim(params.term) === '') {\n    return data;\n  }\n\n  if (data.children && data.children.length > 0) {\n    var match = $.extend(true, {}, data);\n\n    for (var c = data.children.length - 1; c >= 0; c--) {\n      var child = data.children[c];\n      child.parentText += data.parentText + \" \" + data.text;\n      var matches = modelMatcher(params, child);\n\n      if (matches == null) {\n        match.children.splice(c, 1);\n      }\n    }\n\n    if (match.children.length > 0) {\n      return match;\n    }\n\n    return modelMatcher(params, match);\n  }\n\n  var original = (data.parentText + ' ' + data.text).toUpperCase();\n  var term = params.term.toUpperCase();\n\n  if (original.indexOf(term) > -1) {\n    return data;\n  }\n\n  return null;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/pages/lock_form.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/pages/lock_form.js"]();
/******/ 	
/******/ })()
;