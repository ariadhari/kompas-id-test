/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/pages/tag.js":
/*!***********************************!*\
  !*** ./resources/js/pages/tag.js ***!
  \***********************************/
/***/ (() => {

eval("\n\nvar datatable;\n\nvar KTDatatableJson = function () {\n  var grid = function grid() {\n    datatable = $('#kt_datatable').DataTable({\n      responsive: true,\n      paging: true,\n      dom: \"<'row'<'col-sm-12'tr>>\\n\\t\\t\\t<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7 dataTables_pager'lp>>\",\n      lengthMenu: [10, 25, 50, 100],\n      pageLength: 10,\n      processing: true,\n      serverSide: true,\n      autoWidth: false,\n      ajax: {\n        url: HOST_URL + '/datatables/tag',\n        type: 'POST'\n      },\n      order: [[1, 'desc']],\n      columns: [{\n        data: 'tag'\n      }, {\n        data: 'lastgenerated'\n      }, {\n        data: 'keyword'\n      }, {\n        data: 'description'\n      }, {\n        data: 'is_xml'\n      }, {\n        data: 'link'\n      }, {\n        data: 'action'\n      }],\n      columnDefs: [{\n        targets: 0,\n        width: '250',\n        responsivePriority: 1\n      }, {\n        targets: 1,\n        width: '250'\n      }, {\n        width: '250',\n        targets: 2,\n        render: function render(data, type, row, meta) {\n          if (typeof row.keyword === 'undefined' || row.keyword === null || row.keyword === '') {\n            return '<span data-type=\"address\" data-val=\"\" data-pk=\"' + row.tag_id + '\" data-title=\"Enter Keyword & Description\" class=\"font-weight-bold text-danger txtkeyword\" style=\"font-size:11px\"><i class=\"fas fa-pencil-ruler icon-sm text-danger\"></i> Set Keyword</span>';\n          }\n\n          return '<span data-type=\"address\" data-val=\"' + row.keyword + '\" data-pk=\"' + row.tag_id + '\" data-title=\"Enter Keyword & Description\" class=\"txtkeyword\">' + row.keyword + '</span>';\n        },\n        responsivePriority: 1\n      }, {\n        width: '400',\n        targets: 3,\n        render: function render(data, type, row, meta) {\n          if (typeof row.description === 'undefined' || row.description === null || row.keyword === '') {\n            return '<span data-type=\"address\" data-val=\"\" data-pk=\"' + row.tag_id + '\" data-title=\"Enter Keyword & Description\" class=\"font-weight-bold text-danger txtdescription\" style=\"font-size:11px\"><i class=\"fas fa-pencil-ruler icon-sm text-danger\"></i> Set Description</span>';\n          }\n\n          return '<span data-type=\"address\" data-val=\"' + row.description + '\" data-pk=\"' + row.tag_id + '\" data-title=\"Enter Keyword & Description\" class=\"txtdescription\">' + row.description + '</span>';\n        },\n        responsivePriority: 1\n      }, {\n        width: '75',\n        targets: 4,\n        render: function render(data, type, row, meta) {\n          var status = {\n            1: {\n              'title': 'Yes',\n              'class': 'label-light-success'\n            },\n            0: {\n              'title': 'No',\n              'class': 'label-light-danger'\n            }\n          };\n\n          if (typeof status[row.is_xml] === 'undefined') {\n            return data;\n          }\n\n          return '<span class=\"label label-lg font-weight-bold ' + status[row.is_xml][\"class\"] + ' label-inline\">' + status[row.is_xml].title + '</span>';\n        }\n      }, {\n        targets: 6,\n        width: '200',\n        title: 'Actions',\n        orderable: false,\n        className: \"text-nowrap\"\n      }]\n    });\n\n    var filter = function filter() {\n      var val = $.fn.dataTable.util.escapeRegex($(this).val());\n      datatable.column($(this).data('col-index')).search(val ? val : '', false, false).draw();\n    };\n\n    $('#kt_search').on('click', function (e) {\n      e.preventDefault();\n      var params = {};\n      $('.datatable-input').each(function () {\n        var i = $(this).data('col-index');\n\n        if (params[i]) {\n          params[i] += '|' + $(this).val();\n        } else {\n          params[i] = $(this).val();\n        }\n      });\n      $.each(params, function (i, val) {\n        // apply search params to datatable\n        datatable.column(i).search(val ? val : '', false, false);\n      });\n      datatable.table().draw();\n    });\n  };\n\n  $('#kt_datatable').editable({\n    showbuttons: 'bottom',\n    selector: 'span.txtkeyword',\n    clear: false,\n    type: 'POST',\n    url: HOST_URL + '/ajax/tag/store-meta',\n    validate: function validate(value, pk) {\n      console.log($(this).html());\n      if (value.keyword == '') return 'Keyword is required!';\n      if (value.description == '') return 'Description is required!';\n    },\n    success: function success(response, newValue) {\n      datatable.table().draw();\n    }\n  });\n  $('#kt_datatable').editable({\n    showbuttons: 'bottom',\n    selector: 'span.txtdescription',\n    clear: false,\n    type: 'POST',\n    url: HOST_URL + '/ajax/tag/store-meta',\n    validate: function validate(value, pk) {\n      if (value.keyword == '') return 'Keyword is required!';\n      if (value.description == '') return 'Description is required!';\n    },\n    success: function success(response, newValue) {\n      datatable.table().draw();\n    }\n  });\n  return {\n    init: function init() {\n      grid();\n    }\n  };\n}();\n\n(function ($) {\n  \"use strict\";\n\n  var Input = function Input(options) {\n    this.init('address', options, Input.defaults);\n  };\n\n  $.fn.editableutils.inherit(Input, $.fn.editabletypes.abstractinput);\n  $.extend(Input.prototype, {\n    render: function render() {\n      this.$input = this.$tpl.find('input, textarea');\n    },\n    value2html: function value2html(value, element) {\n      if (!value) {\n        $(element).empty();\n        return;\n      }\n\n      if (value.keyword) {\n        var html = $('<div>').text(value.keyword).html();\n        $(element).closest('tr').find('.txtkeyword').removeClass('font-italic').removeClass('text-danger').css(\"font-size\", \"\").html(html);\n      }\n\n      if (value.description) {\n        var html = $('<div>').text(value.description).html();\n        $(element).closest('tr').find('.txtdescription').removeClass('font-italic').removeClass('text-danger').css(\"font-size\", \"\").html(html);\n      }\n    },\n    html2value: function html2value(html) {\n      var elem = this.options.scope;\n      return {\n        keyword: $(elem).closest('tr').find('span.txtkeyword').attr('data-val'),\n        description: $(elem).closest('tr').find('span.txtdescription').attr('data-val')\n      };\n    },\n    value2str: function value2str(value) {\n      var str = '';\n\n      if (value) {\n        for (var k in value) {\n          str = str + k + ':' + value[k] + ';';\n        }\n      }\n\n      return str;\n    },\n    str2value: function str2value(str) {\n      return str;\n    },\n    value2input: function value2input(value) {\n      if (!value) {\n        return;\n      }\n\n      this.$input.filter('[name=\"keyword\"]').val(value.keyword);\n      this.$input.filter('[name=\"description\"]').val(value.description);\n    },\n    input2value: function input2value(value) {\n      return {\n        keyword: this.$input.filter('[name=\"keyword\"]').val(),\n        description: this.$input.filter('[name=\"description\"]').val()\n      };\n    },\n    activate: function activate() {\n      this.$input.filter('[name=\"keyword\"]').focus();\n    },\n    autosubmit: function autosubmit() {\n      this.$input.keydown(function (e) {\n        if (e.which === 13) {\n          $(this).closest('form').submit();\n        }\n      });\n    }\n  });\n  Input.defaults = $.extend({}, $.fn.editabletypes.abstractinput.defaults, {\n    tpl: window.templates,\n    inputclass: ''\n  });\n  $.fn.editabletypes.address = Input;\n})(window.jQuery);\n\njQuery(document).ready(function () {\n  KTDatatableJson.init();\n});\n\nwindow.templates = function () {\n  return \"<div style=\\\"margin-bottom:10px\\\">\\n                <input type=\\\"text\\\" name=\\\"keyword\\\" class=\\\"form-control\\\" placeholder=\\\"Keyword\\\" style=\\\"width:100%\\\" required>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div>\\n                <textarea name=\\\"description\\\" class=\\\"form-control\\\" placeholder=\\\"Description\\\" rows=\\\"4\\\" style=\\\"width:100%\\\" required></textarea>\\n\\t\\t\\t</div>\";\n};\n\nwindow.destroy = function (id) {\n  var msg = 'Do you want to to delete this data now ? <br/> You won\\'t be able to revert this!';\n  Swal.fire({\n    title: 'Are you sure?',\n    html: msg,\n    icon: 'warning',\n    width: '550px',\n    buttonsStyling: false,\n    confirmButtonText: \"<i class='flaticon2-check-mark'></i>Yes, delete it!\",\n    showCancelButton: true,\n    cancelButtonText: \"<i class='flaticon2-cross'></i> No, thanks\",\n    customClass: {\n      confirmButton: \"btn btn-primary\",\n      cancelButton: \"btn btn-secondary\"\n    },\n    reverseButtons: true\n  }).then(function (result) {\n    if (result.value) {\n      $.ajax({\n        type: \"POST\",\n        dataType: 'html',\n        url: HOST_URL + \"/tag/\" + id,\n        cache: false,\n        data: {\n          _method: 'DELETE',\n          id: id\n        },\n        success: function success(data) {\n          Swal.fire(\"Success!\", \"Data deleted successfully.\", \"success\");\n          datatable.table().draw();\n        },\n        error: function error(xhr, ajaxOptions, thrownError) {\n          Swal.fire(\"Failed!\", \"Data failed to delete.\", \"error\");\n        }\n      });\n      event.preventDefault();\n    }\n  });\n  return false;\n};\n\nwindow.setHotTopic = function (id) {\n  var msg = 'Do you want to set this data as hot topic ?';\n  Swal.fire({\n    title: 'Set as Hot Topic',\n    html: msg,\n    icon: 'warning',\n    width: '550px',\n    buttonsStyling: false,\n    confirmButtonText: \"<i class='flaticon2-check-mark'></i>Yes, i'm sure!\",\n    showCancelButton: true,\n    cancelButtonText: \"<i class='flaticon2-cross'></i> No, thanks\",\n    customClass: {\n      confirmButton: \"btn btn-primary\",\n      cancelButton: \"btn btn-secondary\"\n    },\n    reverseButtons: true\n  }).then(function (result) {\n    if (result.value) {\n      $.ajax({\n        type: \"POST\",\n        dataType: 'json',\n        url: HOST_URL + \"/ajax/tag/set-hot-topic\",\n        cache: false,\n        data: {\n          id: id\n        },\n        success: function success(data) {\n          console.log(data.msg);\n          Swal.fire(data.title, data.msg, data.status);\n          datatable.table().draw();\n        },\n        error: function error(xhr, ajaxOptions, thrownError) {\n          Swal.fire(\"Failed!\", \"Failed to set as hot topic.\", \"error\");\n        }\n      });\n      event.preventDefault();\n    }\n  });\n  return false;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/pages/tag.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/pages/tag.js"]();
/******/ 	
/******/ })()
;