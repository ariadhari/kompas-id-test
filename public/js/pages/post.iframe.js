/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/pages/post.iframe.js":
/*!*******************************************!*\
  !*** ./resources/js/pages/post.iframe.js ***!
  \*******************************************/
/***/ (() => {

eval("function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar dt;\n$(function () {\n  dt = $('#dtIframe').DataTable({\n    responsive: true,\n    dom: \"<'row'<'col-sm-12'tr>>\\n        <'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7 dataTables_pager'lp>>\",\n    lengthMenu: [10, 25, 50, 100],\n    pageLength: 10,\n    processing: true,\n    serverSide: true,\n    ajax: {\n      url: HOST_URL + '/datatables/posts/iframe',\n      type: 'POST'\n    },\n    select: {\n      style: 'multi'\n    },\n    order: [[0, 'desc']],\n    columns: [{\n      data: 'post_date'\n    }, {\n      data: 'post_title'\n    }, {\n      data: 'category_name'\n    }, {\n      data: 'post_id'\n    }, {\n      data: 'post_status'\n    }, {\n      data: 'post_status_xml'\n    }, {\n      data: 'post_hits'\n    }],\n    columnDefs: [{\n      targets: 0,\n      width: 80,\n      render: function render(data, type, row, meta) {\n        return moment(data).format('DD MMM YYYY');\n        ;\n      }\n    }, {\n      targets: 1,\n      width: 300,\n      responsivePriority: 1\n    }, {\n      targets: 2,\n      width: 200\n    }, {\n      targets: 3,\n      responsivePriority: 1,\n      searchable: false,\n      width: 10,\n      render: function render(data, type, row, meta) {\n        if (type === 'display') {\n          var checked = \"\";\n\n          if (jQuery.inArray(row.post_id.toString(), window.parent.postId) != -1) {\n            checked = 'checked=\"true\"';\n          }\n\n          data = '<label class=\"checkbox\"><input type=\"checkbox\" ' + checked + ' data-id=\"' + row.post_id + '\" data-title=\"' + row.post_title + '\" data-url=\"' + row.url + '\" class=\"dt-checkboxes\" autocomplete=\"off\"><span></span></label>';\n        }\n\n        return data;\n      },\n      checkboxes: {\n        'selectRow': false,\n        'selectAllRender': '#'\n      }\n    }, {\n      targets: 4,\n      render: function render(data, type, full, meta) {\n        var _status;\n\n        var status = (_status = {\n          publish: {\n            'title': 'Pending',\n            'class': 'label-light-primary'\n          },\n          draft: {\n            'title': 'Draft',\n            'class': 'label-light-danger'\n          }\n        }, _defineProperty(_status, \"publish\", {\n          'title': 'Publish',\n          'class': 'label-light-success'\n        }), _defineProperty(_status, \"revision\", {\n          'title': 'Revision',\n          'class': 'label-light-info'\n        }), _status);\n\n        if (typeof status[data] === 'undefined') {\n          return data;\n        }\n\n        return '<span class=\"label label-lg font-weight-bold ' + status[data][\"class\"] + ' label-inline\">' + status[data].title + '</span>';\n      }\n    }, {\n      targets: 5,\n      render: function render(data, type, full, meta) {\n        var status = {\n          1: {\n            'title': 'Yes',\n            'class': 'label-light-success'\n          },\n          0: {\n            'title': 'No',\n            'class': 'label-light-danger'\n          }\n        };\n\n        if (typeof status[data] === 'undefined') {\n          return data;\n        }\n\n        return '<span class=\"label label-lg font-weight-bold ' + status[data][\"class\"] + ' label-inline\">' + status[data].title + '</span>';\n      }\n    }, {\n      targets: 6,\n      render: function render(data, type, full, meta) {\n        if (data == '' || data == null) {\n          return 0;\n        }\n\n        return numberWithCommas(data);\n      }\n    }],\n    drawCallback: function drawCallback() {\n      $('.dt-checkboxes').on('click', function () {\n        var elem = $(this);\n\n        if ($(this).prop('checked')) {\n          window.parent.choice.push({\n            id: elem.attr('data-id'),\n            title: elem.attr('data-title'),\n            url: elem.attr('data-url')\n          });\n        } else {\n          window.parent.choice = $.grep(window.parent.choice, function (e) {\n            return e.id != elem.attr('data-id');\n          });\n        }\n      });\n    }\n  });\n  $('#kt_search').on('click', function (e) {\n    e.preventDefault();\n    var params = {};\n    $('.datatable-input').each(function () {\n      var i = $(this).data('col-index');\n\n      if (params[i]) {\n        params[i] += '|' + $(this).val();\n      } else {\n        params[i] = $(this).val();\n      }\n    });\n    $.each(params, function (i, val) {\n      dt.column(i).search(val ? val : '', false, false);\n    });\n    dt.table().draw();\n  });\n  $('#kt_reset').on('click', function (e) {\n    e.preventDefault();\n    $('.datatable-input').each(function () {\n      $(this).val('');\n      dt.column($(this).data('col-index')).search('', false, false);\n    });\n    dt.table().draw();\n  });\n});\n\nwindow.attach = function () {\n  if (window.parent.choice.length < 1) {\n    Swal.fire(\"Oops!\", \"There's no data selected.\", \"warning\");\n    return;\n  }\n\n  if (window.parent.choice.length > 3) {\n    Swal.fire(\"Oops!\", \"Add article read too only allowed for 3 article\", \"warning\");\n    return;\n  }\n\n  window.parent.$('.postin').val('');\n  window.parent.postId = [];\n  var idx = 0;\n  $.each(window.parent.choice, function (index, item) {\n    ++idx;\n    window.parent.$('#post_postin' + idx + '_title').val(item.title);\n    window.parent.$('#post_postin' + idx + '_url').val(item.url);\n    window.parent.postId.push(item.id);\n  });\n  window.parent.$('#read_too').val(idx + ' article selected');\n  parent.$.fancybox.close();\n};\n\nwindow.numberWithCommas = function (x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/pages/post.iframe.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/pages/post.iframe.js"]();
/******/ 	
/******/ })()
;